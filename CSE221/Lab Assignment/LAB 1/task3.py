# -*- coding: utf-8 -*-
"""task3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19QnmHGFV2HWU8r8QWRJh91GyRVCFRMM0
"""

def bubbleSort(arr):
  for i in range(len(arr)-1):
    bestcase=True
    for j in range(len(arr)-i-1):
      if arr[j] > arr[j+1]:
        bestcase=False
        arr[j], arr[j+1] = arr[j+1], arr[j]
    if bestcase==True:
      break
  return arr
input=open('input3.txt','r')
output=open('output3.txt','w')
size=int(input.readline())
arr=input.readline()
arr=arr.split(' ')
for i in range(len(arr)):
  arr[i]=int(arr[i])
sortedarr=bubbleSort(arr)
for i in range(len(sortedarr)):
  output.write(str(sortedarr[i])+' ')
input.close()
output.close()
#Explanation:
#The best case scenerio for bubble sort is when the array is sorted
#Assuming we have an sorted array, we used a flag to determine whether
#it is sorted or not. So, if there the values dont need to be swapped 
#at the first iteration of outer for loop, the flag remains TRUE
#after running the inner loop, we break the outer loop and return
#so time complexity becomes θ(n+c) = θ(n)