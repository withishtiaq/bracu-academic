# -*- coding: utf-8 -*-
"""Task-3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t1MItGQGv0FVTQhtjrgVzVxT_RUqS9PM
"""

#Task-3

def readInput(filename):

    with open(filename, "r") as file:
        n, m = map(int, file.readline().split())

        graph = [[] for _ in range(n + 1)]

        for _ in range(m):
            u, v = map(int, file.readline().split())
            graph[u].append(v)
            graph[v].append(u)

        return graph

def dfs(graph, start):
    visited = set()
    stack = [start]
    path = []
    while stack:
        vertex = stack.pop()
        if vertex not in visited:
            visited.add(vertex)
            path.append(vertex)
            stack.extend(reversed(graph[vertex]))
    return path

def writeOutput(filename, path):
    with open(filename, "w") as file:
        for vertex in path:
            file.write(str(vertex) + " ")
        file.write("\n")


input_filename = "input3.txt"
output_filename = "output3.txt"

graph = readInput(input_filename)


result_path = dfs(graph, 1)
writeOutput(output_filename, result_path)