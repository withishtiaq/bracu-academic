# -*- coding: utf-8 -*-
"""Untitled18.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YEiAwmE-dJsIOXbwDGMQs7O5YNpNaaR_
"""

#Task 06 :

def partition(arr, low, high):
    pivot = arr[high]
    i = low - 1
    for j in range(low, high):
        if arr[j] < pivot:
            i += 1
            arr[i], arr[j] = arr[j], arr[i]
    arr[i + 1], arr[high] = arr[high], arr[i + 1]
    return i + 1

def findKthSmallest(arr, low, high, k):
    if low == high:
        return arr[low]
    pivotIndex = partition(arr, low, high)
    if k == pivotIndex - low + 1:
        return arr[pivotIndex]
    if k < pivotIndex - low + 1:
        return findKthSmallest(arr, low, pivotIndex - 1, k)
    return findKthSmallest(arr, pivotIndex + 1, high, k - (pivotIndex - low + 1))

inp = open("input6.txt", "r")
oup = open("output6.txt", "w")

N = int(inp.readline())
A = list(map(int, inp.readline().split()))
Q = int(inp.readline())

results = []
for _ in range(Q):
    K = int(inp.readline())
    result = findKthSmallest(A, 0, N - 1, K)
    results.append(result)

oup.write("\n".join(map(str, results)))

inp.close()
oup.close()