# -*- coding: utf-8 -*-
"""Task-6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t1MItGQGv0FVTQhtjrgVzVxT_RUqS9PM
"""

#Task-6

def dfs(grid, visited, r, c):
    if r < 0 or r >= len(grid) or c < 0 or c >= len(grid[0]) or visited[r][c] or grid[r][c] == '#':
        return 0

    visited[r][c] = True
    diamonds = 0 if grid[r][c] != 'D' else 1

    for dr, dc in [(0, 1), (0, -1), (1, 0), (-1, 0)]:
        diamonds += dfs(grid, visited, r + dr, c + dc)

    return diamonds

with open('input6.txt', 'r') as input_file:
    r, c = map(int, input_file.readline().split())
    grid = [input_file.readline().strip() for _ in range(r)]

max_diamonds = 0
for sr in range(r):
    for sc in range(c):
        if grid[sr][sc] != '#':
            visited = [[False] * c for _ in range(r)]
            diamonds = dfs(grid, visited, sr, sc)
            max_diamonds = max(max_diamonds, diamonds)

with open('output6.txt', 'w') as output_file:
    output_file.write(str(max_diamonds))