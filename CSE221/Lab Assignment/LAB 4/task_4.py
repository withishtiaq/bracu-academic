# -*- coding: utf-8 -*-
"""Task-4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t1MItGQGv0FVTQhtjrgVzVxT_RUqS9PM
"""

#Task-4

def has_cycle(graph, node, visited, rec_stack):
    visited.add(node)
    rec_stack.add(node)

    for neighbor in graph[node]:
        if neighbor not in visited:
            if has_cycle(graph, neighbor, visited, rec_stack):
                return True
        elif neighbor in rec_stack:
            return True

    rec_stack.remove(node)
    return False

with open('input4.txt', 'r') as input_file:
    n, m = map(int, input_file.readline().split())
    if not (1 <= n <= 100 and 1 <= m <= 100):
        print("Invalid input!")
    else:
        graph = {i: [] for i in range(1, n + 1)}

        for _ in range(m):
            u, v = map(int, input_file.readline().split())

            if not (1 <= u <= n and 1 <= v <= n):
                print("Invalid input!")
                break
            graph[u].append(v)

        else:
            visited = set()

            for node in range(1, n + 1):
                if node not in visited:
                    if has_cycle(graph, node, visited, set()):
                        output_result = "YES\n"
                        break
            else:
                output_result = "NO\n"

            with open('output4.txt', 'w') as output_file:
                output_file.write(output_result)